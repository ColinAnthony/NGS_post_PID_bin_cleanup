import unittest
from align_ngs_codons import prelim_align



class MyTestCase(unittest.TestCase):

    def test_identicles_prelim_align(self):
        reference = "AGATTAGGT"

        test_in = {"seq1": "AGATTAGGT"}

        test_out = {"seq1": "AGATTAGGT"}

        for name, seq in test_in.items():
            align_seq, frame = prelim_align(seq, reference)
            self.assertEquals(align_seq, test_out[name])


    def test_prelim_align(self):
        reference = "AGATTAGGT"
        test_in = {'CAP255_2000_C1C3_del': 'TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCACAATTGGAGAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTTAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTTT-',
        'CAP255_2000_C1C3_good_del': 'TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCACAATTGGAGAAATAAAGAATTGCACTTTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTCAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTT-------------------',
        'CAP255_2000_C1C3_good_start_1': 'TTAAACTGTAGCAATGCAAGTAGCAATGCAAATGTCACAAAGGTTGATAATAGTAGCACAATTGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTTAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCT--',
        'CAP255_2000_C1C3_good_start_2': 'TTTAAACTGTAGCAATGCAAGTAGCAATGCAAATGTCACAAAGGTTGATAATAGTAGCACAATTGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTTAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCT-',
        'CAP255_2000_C1C3_good_start_3': 'CTTTAAACTGTAGCAATGCAAGTAGCAATGCAAATGTCACAAAGGTTGATAATAGTAGCACAATTGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTTAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCT',
        'CAP255_2000_C1C3_ins_1': 'TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCACAATTGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTCAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTT--',
        'CAP255_2000_C1C3_ins_2': 'TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCAAATTGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTCAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTT--',
        'CAP255_2000_C1C3_ins_3': 'TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCACAATGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTCAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTT--'
                         }
        test_out = {'CAP255_2000_C1C3_del': '--TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCACAATTGGAGAA-TAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTTAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTTT',
 'CAP255_2000_C1C3_good_del': '--TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCACAATTGGAGAAATAAAGAATTGCACTTTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTCAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTT-------------------',
 'CAP255_2000_C1C3_good_start_1': '--TTAAACTGTAGCAATGCAAGTAGCAATGCAAATGTCACAAAGGTTGATAATAGTAGCACAATTGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTTAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCT-----',
 'CAP255_2000_C1C3_good_start_2': '-TTTAAACTGTAGCAATGCAAGTAGCAATGCAAATGTCACAAAGGTTGATAATAGTAGCACAATTGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTTAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCT-----',
 'CAP255_2000_C1C3_good_start_3': 'CTTTAAACTGTAGCAATGCAAGTAGCAATGCAAATGTCACAAAGGTTGATAATAGTAGCACAATTGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTTAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCT-----',
 'CAP255_2000_C1C3_ins_1': '--TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCACAATT-GAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTCAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTT-',
 'CAP255_2000_C1C3_ins_2': '--TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCA-AATTGGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTCAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTT-',
 'CAP255_2000_C1C3_ins_3': '--TTAAACTGTAGCAATGCAAATAGCAATACAAATGTCACAGATATTGATAATAGCACAAT-GGAGAAATAAAGAATTGCACTTTCAATGTAACTACAGAATTAAGAGATAAGGAAAAGAAAGAAAATGCACTCTTTTATAAACTTGATATAGTACCACTTAATGGAAATAACAACAGCAGCTTCAGTATGTATAGATTAATAAACTGTAATACCTCAGTCGTAACACAAGCCTGTCCAAAGGTCTCTTT-'
                    }

        test_in = {"seq1": "AGATTAGGT",
                    "seq2": "AGATTGGT",
                    "seq3": "AGATTAGGT",
                    "seq4": "AGATTAGGT",
                    "seq5": "AGATTAGGT"}

        test_out = {"seq1": "AGATTAGGT",
                    "seq2": "AGATT-GGT",
                    "seq3": "AGATTAGGT",
                    "seq4": "AGATTAGGT",
                    "seq5": "AGATTAGGT"}

        for name, seq in test_in.items():
            align_seq, frame = prelim_align(seq, reference)
            self.assertEquals(align_seq, test_out[name])


if __name__ == '__main__':
    unittest.main()
